name: Default

on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Maven build
        run: mvn clean package
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: target/*.jar

  docker:
    name: docker
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - run: mkdir target
      - name: Download jar
        uses: actions/download-artifact@v2
        with:
          path: target/
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Tagging for ghcr
        id: ghcrtag
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/absurdlab/demo-sso-java-client
          tag-sha: true
      - name: Tagging
        id: aliyuncrtag
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: registry.cn-hangzhou.aliyuncs.com/absurdlab/demo-sso-java-client
          tag-sha: true
      - name: Log into ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}
      - name: Log into aliyuncr
        uses: docker/login-action@v1
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ steps.ghcrtag.outputs.tags }}
            ${{ steps.aliyuncrtag.outputs.tags }}

  release:
    name: release
    runs-on: ubuntu-latest
    needs:
      - docker
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - name: Release chart
        uses: helm/chart-releaser-action@v1.2.0
        with:
          charts_dir: deploy/charts
        env:
          CR_TOKEN: "${{ secrets.GH_TOKEN }}"